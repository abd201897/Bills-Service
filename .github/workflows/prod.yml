name: PROD Build and Deploy to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: production-367411-default-prod	    # Add your cluster name here.
  GKE_ZONE: us-central1-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: bills-service 
  PROJECT_NAME: paymax
  IMAGE: bills-service
  ENVIRONMENT: prod

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
  
      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
  
      # Get the GKE credentials so we can deploy to the cluster
      - name: Setup GKE credentials
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
  
      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE}}-${{env.ENVIRONMENT}}:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            .
  
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE}}-${{env.ENVIRONMENT}}:$GITHUB_SHA"
          docker tag gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE}}-${{env.ENVIRONMENT}}:$GITHUB_SHA gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE}}-${{env.ENVIRONMENT}}:latest
          docker push gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE}}-${{env.ENVIRONMENT}}:latest

      - name: Deploy
        run: |-
          kubectl apply -f k8s-manifest-${{env.ENVIRONMENT}}.yml -n ${{env.PROJECT_NAME}} 
          kubectl rollout status deployment/${{env.DEPLOYMENT_NAME}} -n ${{env.PROJECT_NAME}} 
          kubectl get services -o wide -n ${{env.PROJECT_NAME}} 

