name: DEV Build and Deploy to Vultr

on:
  push:
    branches: [ ops ]

env:
  DEPLOYMENT_NAME: bills-service
  REPO_NAME: paymax2022
  PROJECT_NAME: paymax
  IMAGE: ghcr.io/paymax2022/bills-service
  ENVIRONMENT: dev

jobs:
  build-deploy:
    runs-on: [ubuntu-latest]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE}}-${{ env.ENVIRONMENT }}:${{ github.run_number }}
            ${{ env.IMAGE}}-${{ env.ENVIRONMENT }}:latest
          #push: ${{ github.ref == 'refs/heads/main' }}
          push: true

      - name: Create Secrets
        run: |-
          mkdir -p /home/runner/.kube/
          echo "KUBECONFIG=${{ secrets.KUBECONFIG}}" > /home/runner/.kube/config
      
      - name: Create Envrionment Variable
        run: |-
          echo "DEV_ENV=${{ secrets.DEV_ENV }}" > ./.env
          kubectl delete secret --ignore-not-found ${{env.DEPLOYMENT_NAME}}-secret -n ${{env.PROJECT_NAME}}-${{env.ENVIRONMENT}}
          kubectl create secret generic ${{env.DEPLOYMENT_NAME}}-secret -n ${{env.PROJECT_NAME}}-${{env.ENVIRONMENT}} --from-env-file=./.env
          
      - name: Deploy
        run: |-
          sed -i 's/image\: ghcr.io\/${{env.REPO_NAME}}\/${{env.DEPLOYMENT_NAME}}/image\: ghcr.io\/${{env.REPO_NAME}}\/${{env.DEPLOYMENT_NAME}}-${{env.ENVIRONMENT}}/g' k8s-manifest.yml
          sed -i 's/host\: bills.${{ env.PROJECT_NAME }}.ng/host\: ${{env.ENVIRONMENT}}-bills.${{ env.PROJECT_NAME }}.ng/g' k8s-manifest.yml
          kubectl apply -f k8s-manifest.yml -n ${{env.PROJECT_NAME}}-${{env.ENVIRONMENT}}
          kubectl rollout status deployment/${{env.DEPLOYMENT_NAME}} -n ${{env.PROJECT_NAME}}-${{env.ENVIRONMENT}}
          kubectl get services -o wide -n ${{env.PROJECT_NAME}}-${{env.ENVIRONMENT}} 
